{{#if originalClassPkg}}package {{originalClassPkg}}{{/if}}

class {{generatedClassSimpleName}}: dev.restate.sdk.common.ComponentAdapter<{{originalClassFqcn}}> {

    companion object {
        const val COMPONENT_NAME: String = "{{componentName}}";
    }

    override fun adapt(bindableComponent: {{originalClassFqcn}}): dev.restate.sdk.common.BindableComponent {
        return dev.restate.sdk.kotlin.Component.{{#if isObject}}virtualObject{{else}}service{{/if}}(COMPONENT_NAME) {
                {{#handlers}}
                handler(dev.restate.sdk.kotlin.Component.HandlerSignature("{{name}}", {{{inputSerdeDecl}}}, {{{outputSerdeDecl}}})) { ctx, req ->
                    {{#if inputEmpty}}bindableComponent.{{name}}(ctx){{else}}bindableComponent.{{name}}(ctx, req){{/if}}
                }
                {{/handlers}}
            }
    }

    override fun supportsObject(serviceObject: Any?): Boolean {
        return serviceObject is {{originalClassFqcn}};
    }

}