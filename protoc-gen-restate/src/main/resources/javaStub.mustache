{{#packageName}}
package {{packageName}};
{{/packageName}}

import dev.restate.sdk.UnkeyedContext;
import dev.restate.sdk.KeyedContext;
import dev.restate.sdk.Awaitable;
import dev.restate.sdk.common.syscalls.Syscalls;
import java.time.Duration;
import static {{packageName}}.{{serviceName}}Grpc.getServiceDescriptor;

{{#deprecated}}
@java.lang.Deprecated
{{/deprecated}}
public class {{className}} {
    private {{className}}() {}

    /**
     * Create a new client from the given {@link KeyedContext}.
     */
    public static {{serviceName}}RestateClient newClient(UnkeyedContext ctx) {
        return new {{serviceName}}RestateClient(ctx);
    }

{{{apidoc}}}
    public static final class {{serviceName}}RestateClient {
        private final UnkeyedContext ctx;

        {{serviceName}}RestateClient(UnkeyedContext ctx) {
            this.ctx = ctx;
        }

        // Create a variant of this client to execute oneWay calls.
        public {{serviceName}}RestateOneWayClient oneWay() {
            return new {{serviceName}}RestateOneWayClient(ctx);
        }

        // Create a variant of this client to execute delayed calls.
        public {{serviceName}}RestateDelayedClient delayed(Duration delay) {
            return new {{serviceName}}RestateDelayedClient(ctx, delay);
        }

        {{#methods}}
        {{#deprecated}}@java.lang.Deprecated{{/deprecated}}
{{{apidoc}}}
        public Awaitable<{{outputType}}> {{topLevelClientMethodName}}({{^isInputEmpty}}{{inputType}} request{{/isInputEmpty}}) {
            return this.ctx.call({{packageName}}.{{serviceName}}Grpc.{{methodDescriptorGetter}}(), {{#isInputEmpty}}com.google.protobuf.Empty.getDefaultInstance(){{/isInputEmpty}}{{^isInputEmpty}}request{{/isInputEmpty}});
        }

        {{/methods}}
    }

    public static final class {{serviceName}}RestateOneWayClient {
        private final UnkeyedContext ctx;

        {{serviceName}}RestateOneWayClient(UnkeyedContext ctx) {
            this.ctx = ctx;
        }

        {{#methods}}
        {{#deprecated}}@java.lang.Deprecated{{/deprecated}}
{{{apidoc}}}
        public void {{methodName}}({{^isInputEmpty}}{{inputType}} request{{/isInputEmpty}}) {
            this.ctx.oneWayCall({{packageName}}.{{serviceName}}Grpc.{{methodDescriptorGetter}}(), {{#isInputEmpty}}com.google.protobuf.Empty.getDefaultInstance(){{/isInputEmpty}}{{^isInputEmpty}}request{{/isInputEmpty}});
        }

        {{/methods}}
    }

    public static final class {{serviceName}}RestateDelayedClient {
        private final UnkeyedContext ctx;
        private final Duration delay;

        {{serviceName}}RestateDelayedClient(UnkeyedContext ctx, Duration delay) {
            this.ctx = ctx;
            this.delay = delay;
        }

        {{#methods}}
        {{#deprecated}}@java.lang.Deprecated{{/deprecated}}
{{{apidoc}}}
        public void {{methodName}}({{^isInputEmpty}}{{inputType}} request{{/isInputEmpty}}) {
            this.ctx.delayedCall({{packageName}}.{{serviceName}}Grpc.{{methodDescriptorGetter}}(), {{#isInputEmpty}}com.google.protobuf.Empty.getDefaultInstance(){{/isInputEmpty}}{{^isInputEmpty}}request{{/isInputEmpty}}, this.delay);
        }

        {{/methods}}
    }

{{{apidoc}}}
    public static abstract class {{serviceName}}RestateImplBase implements dev.restate.sdk.RestateService {

        {{#methods}}
        {{#deprecated}}
        @java.lang.Deprecated
        {{/deprecated}}
{{{apidoc}}}
        public {{#isOutputEmpty}}void{{/isOutputEmpty}}{{^isOutputEmpty}}{{outputType}}{{/isOutputEmpty}} {{methodName}}({{contextType}} context{{^isInputEmpty}}, {{inputType}} request{{/isInputEmpty}}) throws dev.restate.sdk.common.TerminalException {
            throw new dev.restate.sdk.common.TerminalException(dev.restate.sdk.common.TerminalException.Code.UNIMPLEMENTED);
        }

        {{/methods}}
        @java.lang.Override public final io.grpc.ServerServiceDefinition bindService() {
            return io.grpc.ServerServiceDefinition.builder(getServiceDescriptor())
                    {{#methods}}
                    .addMethod(
                            {{packageName}}.{{serviceName}}Grpc.{{methodDescriptorGetter}}(),
                            io.grpc.stub.ServerCalls.asyncUnaryCall(
                                    HandlerAdapter.of(this::{{methodName}})))
                    {{/methods}}
                    .build();
        }
    }

    private static final class HandlerAdapter<Req, Resp> implements
        io.grpc.stub.ServerCalls.UnaryMethod<Req, Resp> {

        private final java.util.function.BiFunction<KeyedContext, Req, Resp> handler;

        private HandlerAdapter(java.util.function.BiFunction<KeyedContext, Req, Resp> handler) {
            this.handler = handler;
        }

        @Override
        public void invoke(Req request, io.grpc.stub.StreamObserver<Resp> responseObserver) {
            responseObserver.onNext(handler.apply(KeyedContext.fromSyscalls(Syscalls.current()), request));
            responseObserver.onCompleted();
        }

        private static <Req, Resp> HandlerAdapter<Req, Resp> of(java.util.function.BiFunction<KeyedContext, Req, Resp> handler) {
            return new HandlerAdapter<>(handler);
        }

        private static <Resp> HandlerAdapter<com.google.protobuf.Empty, Resp> of(java.util.function.Function<KeyedContext, Resp> handler) {
            return new HandlerAdapter<>((ctx, e) -> handler.apply(ctx));
        }

        private static <Req> HandlerAdapter<Req, com.google.protobuf.Empty> of(java.util.function.BiConsumer<KeyedContext, Req> handler) {
            return new HandlerAdapter<>((ctx, req) -> {
                handler.accept(ctx, req);
                return com.google.protobuf.Empty.getDefaultInstance();
            });
        }

        private static HandlerAdapter<com.google.protobuf.Empty, com.google.protobuf.Empty> of(java.util.function.Consumer<KeyedContext> handler) {
            return new HandlerAdapter<>((ctx, req) -> {
                handler.accept(ctx);
                return com.google.protobuf.Empty.getDefaultInstance();
            });
        }
    }

}