{{#if originalClassPkg}}package {{originalClassPkg}};{{/if}}

public class {{generatedClassSimpleName}} implements dev.restate.sdk.common.BindableService<dev.restate.sdk.Service.Options> {

    private final dev.restate.sdk.common.syscalls.ServiceDefinition service;
    private final dev.restate.sdk.Service.Options options;

    public {{generatedClassSimpleName}}({{originalClassFqcn}} bindableService) {
        this(bindableService, dev.restate.sdk.Service.Options.DEFAULT);
    }

    public {{generatedClassSimpleName}}({{originalClassFqcn}} bindableService, dev.restate.sdk.Service.Options options) {
        this.service = dev.restate.sdk.common.syscalls.ServiceDefinition.of(
            {{generatedClassSimpleNamePrefix}}Definitions.SERVICE_NAME,
            {{#if isObject}}dev.restate.sdk.common.ServiceType.VIRTUAL_OBJECT{{else}}dev.restate.sdk.common.ServiceType.SERVICE{{/if}},
            java.util.List.of(
            {{#handlers}}
                dev.restate.sdk.common.syscalls.HandlerDefinition.of(
                    dev.restate.sdk.common.syscalls.HandlerSpecification.of(
                        "{{name}}",
                        {{#if isExclusive}}dev.restate.sdk.common.HandlerType.EXCLUSIVE{{else}}dev.restate.sdk.common.HandlerType.SHARED{{/if}},
                        {{inputSerdeRef}},
                        {{outputSerdeRef}}
                    ){{#if inputAcceptContentType}}.withAcceptContentType("{{inputAcceptContentType}}"){{/if}},
                    dev.restate.sdk.Service.Handler.of(bindableService::{{name}})
                ){{#unless @last}},{{/unless}}
            {{/handlers}}
            )
        );
        this.options = options;
    }

    @Override
    public dev.restate.sdk.Service.Options options() {
        return this.options;
    }

    @Override
    public java.util.List<dev.restate.sdk.common.syscalls.ServiceDefinition<dev.restate.sdk.Service.Options>> definitions() {
        return java.util.List.of(this.service);
    }
}