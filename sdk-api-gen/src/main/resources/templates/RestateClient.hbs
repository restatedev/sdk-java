{{#if packageName}}package {{packageName}};{{/if}}

import dev.restate.sdk.common.StateKey;
import dev.restate.sdk.common.Serde;
import dev.restate.sdk.Awaitable;
import dev.restate.sdk.Context;
import dev.restate.sdk.dynrpc.CodegenUtils;
import java.util.Optional;
import java.time.Duration;

public class {{className}}RestateClient {

    private static final String SERVICE_NAME = "{{fqcn}}";

    {{#methods}}
    private static final io.grpc.MethodDescriptor<dev.restate.sdk.dynrpc.generated.{{#if isObject}}KeyedRpcRequest{{else}}RpcRequest{{/if}}, dev.restate.sdk.dynrpc.generated.RpcResponse> {{descFieldName}} = CodegenUtils.generateMethodDescriptor(dev.restate.sdk.dynrpc.template.generated.{{#if isObject}}KeyedServiceGrpc{{else}}ServiceGrpc{{/if}}.getTemplateMethod(), SERVICE_NAME, "{{name}}");
    {{^inputEmpty}}private static final Serde<{{{inputFqcn}}}> {{inputSerdeFieldName}} = {{{inputSerdeDecl}}};{{/inputEmpty}}
    {{^outputEmpty}}private static final Serde<{{{outputFqcn}}}> {{outputSerdeFieldName}} = {{{outputSerdeDecl}}};{{/outputEmpty}}
    {{/methods}}

    private final Context ctx;
    {{#isObject}}private final String key;{{/isObject}}

    public {{className}}RestateClient(Context ctx{{#isObject}}, String key{{/isObject}}) {
        this.ctx = ctx;
        {{#isObject}}this.key = key;{{/isObject}}
    }

    {{#methods}}
    public {{#if outputEmpty}}Awaitable<Void>{{else}}Awaitable<{{{outputFqcn}}}>{{/if}} {{name}}({{^inputEmpty}}{{{inputFqcn}}} req{{/inputEmpty}}) {
        Awaitable<com.google.protobuf.Value> response = CodegenUtils.RestateClient.{{#if isObject}}invokeKeyed{{else}}invoke{{/if}}(this.ctx, {{descFieldName}}{{#isObject}}, this.key{{/isObject}}, {{#if inputEmpty}}null{{else}}CodegenUtils.tToValue({{inputSerdeFieldName}}, req){{/if}});
        {{#if outputEmpty}}
            return response.map(v -> { return null; });
        {{else}}
            return response.map(v -> CodegenUtils.valueToT({{outputSerdeFieldName}}, v));
        {{/if}}
    }
    {{/methods}}

    public {{className}}OneWayRestateClient oneWay() {
        return new {{className}}OneWayRestateClient();
    }

    public {{className}}DelayedRestateClient delayed(Duration delay) {
        return new {{className}}DelayedRestateClient(delay);
    }

    public class {{className}}OneWayRestateClient {

        {{#methods}}
        public void {{name}}({{^inputEmpty}}{{{inputFqcn}}} req{{/inputEmpty}}) {
                CodegenUtils.RestateClient.{{#if isObject}}invokeKeyed{{else}}invoke{{/if}}OneWay({{../className}}RestateClient.this.ctx, {{descFieldName}}{{#isObject}}, {{../className}}RestateClient.this.key{{/isObject}}, {{#if inputEmpty}}null{{else}}CodegenUtils.tToValue({{inputSerdeFieldName}}, req){{/if}});
        }
        {{/methods}}

    }

    public class {{className}}DelayedRestateClient {

        private final Duration delay;

        {{className}}DelayedRestateClient(Duration delay) {
            this.delay = delay;
        }

        {{#methods}}
        public void {{name}}({{^inputEmpty}}{{{inputFqcn}}} req{{/inputEmpty}}) {
            CodegenUtils.RestateClient.{{#if isObject}}invokeKeyed{{else}}invoke{{/if}}Delayed({{../className}}RestateClient.this.ctx, {{descFieldName}}{{#isObject}}, {{../className}}RestateClient.this.key{{/isObject}}, {{#if inputEmpty}}null{{else}}CodegenUtils.tToValue({{inputSerdeFieldName}}, req){{/if}}, delay);
        }
        {{/methods}}

    }
}