name: Publish release

on:
  workflow_call:
    inputs:
      deploymentTarget:
        description: 'Deployment target (JFrog or GitHub)'
        required: true
        default: 'GitHub'
        type: string

jobs:
  publish:
    if: github.repository == 'restatedev/sdk-java'
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Ideally we delete old packages after releasing new ones but this does not work for snapshot releases
      - name: Delete old java-sdk packages
        if: ${{ inputs.deploymentTarget == 'GitHub' }}
        uses: actions/delete-package-versions@v3
        with:
          package-name: 'dev.restate.sdk.java-sdk'
          min-versions-to-keep: 0
          # We want to remove all the versions containing SNAPSHOT in the name
          # See https://github.com/actions/delete-package-versions/issues/61
          ignore-versions: '^.*(?<!SNAPSHOT)$'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Gradle & publish to JFrog repository
        if: ${{ inputs.deploymentTarget == 'JFrog' }}
        uses: gradle/gradle-build-action@v2
        env:
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_TOKEN: ${{secrets.JFROG_TOKEN }}
        with:
          arguments: publishMavenPublicationToJFrogRepository
      - name: Build with Gradle & publish to GitHub packages repository
        if: ${{ inputs.deploymentTarget == 'GitHub' }}
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: publishMavenPublicationToGitHubPackagesRepository
